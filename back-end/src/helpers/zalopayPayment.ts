import { Response } from 'express'
import moment from 'moment'
import axios from 'axios'
import crypto from 'crypto'

export const zaloMethod = async (
  totalBill: number, 
  products: {product_id: string, title: string, price: number, discountPercentage: number, quantity: number}[], 
  phoneUser: string, 
  orderId: string, 
  res: Response
) => {
  const embed_data = {
    redirecturl: `http://localhost:5173/checkout/success/${orderId}`
  }
  const items = products.map(p => ({
    itemid: p.product_id,
    itemname: p.title,
    itemprice: Math.floor(p.price * (100 - p.discountPercentage) / 100),
    itemquantity: p.quantity
  }))

  const transID = Math.floor(Math.random() * 1000000)
  const orderInfo = {
    app_id: process.env.ZALOPAY_APP_ID, // ƒê·ªãnh danh cho ·ª©ng d·ª•ng ƒë√£ ƒë∆∞·ª£c c·∫•p b·ªüi ZaloPay.
    app_trans_id: `${moment().format('YYMMDD')}_${transID}`, // m√£ giao dich c√≥ ƒë·ªãnh d·∫°ng yyMMdd_xxxx
    app_user: `${phoneUser}-${orderId}`, // S·ªë ƒëi·ªán tho·∫°i ng∆∞·ªùi d√πng - M√£ ƒë∆°n h√†ng
    app_time: Date.now(), // Th·ªùi gian t·∫°o ƒë∆°n h√†ng (unix timestamp in milisecond). Th·ªùi gian t√≠nh ƒë·∫øn milisecond, l·∫•y theo current time v√† kh√¥ng qu√° 15 ph√∫t so v·ªõi th·ªùi ƒëi·ªÉm thanh to√°n
    item: JSON.stringify(items), // 	D·ªØ li·ªáu ri√™ng c·ªßa ƒë∆°n h√†ng. D·ªØ li·ªáu n√†y s·∫Ω ƒë∆∞·ª£c callback l·∫°i cho AppServer khi thanh to√°n th√†nh c√¥ng (N·∫øu kh√¥ng c√≥ th√¨ ƒë·ªÉ chu·ªói r·ªóng). D·∫°ng [{...}]
    embed_data: JSON.stringify(embed_data), 
    amount: Math.floor(totalBill), 
    description: `Thanh to√°n ƒë∆°n h√†ng ${transID}`,
    bank_code: "", 
    mac: '',
    callback_url: 'https://d5bb47ca8910.ngrok-free.app/checkout/callback'
  }

  const data = [
    orderInfo.app_id,
    orderInfo.app_trans_id,
    orderInfo.app_user,
    orderInfo.amount,
    orderInfo.app_time,
    orderInfo.embed_data,
    orderInfo.item
  ].join('|')
  orderInfo.mac = crypto.createHmac('sha256', process.env.ZALOPAY_KEY1)
    .update(data)
    .digest('hex')

  const zaloRes  = await axios.post(process.env.ZALOPAY_ENDPOINT_CREATE, null, { params: orderInfo })
  console.log("üöÄ ~ zalopayPayment.ts ~ zaloMethod ~ zaloRes:", zaloRes);
  if (zaloRes.data.return_code === 1) {
    // Th√†nh c√¥ng
    res.json({ 
      code: 201,  
      message: 'Th√†nh c√¥ng!', 
      order_url: zaloRes.data.order_url, 
      zalo_token: zaloRes.data.zp_trans_token
    })
  } else if (zaloRes.data.return_code === 2) {
    // Th·∫•t b·∫°i
    res.json({ 
      code: 400,  
      message: 'Giao d·ªãch th·∫•t b·∫°i, t√†i kho·∫£n ch∆∞a b·ªã tr·ª´ ti·ªÅn, vui l√≤ng th·ª±c hi·ªán l·∫°i.', 
      error: zaloRes.data
    })
  }
}